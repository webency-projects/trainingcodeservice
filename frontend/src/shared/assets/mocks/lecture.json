{
  "slug": "variables",
  "lecture": "<h1>Переменные</h1>\n<p>Вы можете использовать язык программирования, такой как Python, для выполнения вычислений или работы с постоянными значениями, такими как строки. Однако достаточно ли этого для вас? При написании реальных программ обычно требуется хранить значения или результаты оценки в памяти компьютера.</p>\n<h2>Что такое переменная</h2>\n<p>Переменная — это именованное место, где вы можете сохранить значение для последующего доступа к нему. Представьте себе коробку, в которой вы что-то храните. Это переменная.</p>\n<p>Например, вы вычисляете результат и хотите повторно использовать этот результат в другом месте. В этом случае вы можете использовать такой ящик для экономии времени.</p>\n<p>Как правило, рекомендуется давать переменной имя, описывающее ее содержимое.</p>\n<h2>Определение переменной и присвоение значений</h2>\n<p>Вы можете хранить в переменных почти все, что угодно, присваивая значение именованной переменной со знаком равенства. Согласно PEP 8, один пробел до и после знака присваивания считается хорошей практикой.</p>\n<pre>day_of_week = \"Monday\"</pre>\n<p>Теперь у вас есть строковое значение «Monday», хранящееся в памяти компьютера. Вы можете получить значение, вызвав имя переменной.</p>\n<pre>print(day_of_week)  # Monday</pre>\n<p>day_of_week хранит значение типа str.</p>\n<pre>print(type(day_of_week))  # <class 'str'></pre>\n<p>Вы всегда можете присвоить новое значение определенной переменной.</p>\n<pre>day_of_week = \"Tuesday\"</pre>\n<p>Теперь вы получите другое значение:</p>\n<pre>print(day_of_week)  # Tuesday</pre>\n<p>Можно присвоить значение одной переменной другой переменной:</p>\n<pre>a = 10\nb = a  # b is 10</pre>\n<p>Если вы не определили переменную в рамках своего кода, вы увидите ошибку при попытке ее использовать:</p>\n<h2>Правила именнования переменных</h2>\n<p>Как упоминалось выше, каждая переменная имеет имя, которое отличает ее от других переменных. Есть несколько правил именования переменных, которым вы должны следовать:</p>\n<ul>\n    <li>Имена чувствительны к регистру (month не совпадает с Month).</li>\n    <li>Имя начинается с буквы или знака подчеркивания, за которыми следуют буквы, цифры или знаки подчеркивания (например, user_name, score1, _count).</li>\n    <li>Имя не может начинаться с цифры (например, 2q недопустимо).</li>\n    <li>Имя не должно быть ключевым словом, зарезервированным языком (например, int, str ).</li>\n</ul>\n<p>Не нарушайте эти правила; в противном случае ваша программа не будет работать</p>"
}
